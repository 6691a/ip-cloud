# Generated by Django 5.0.3 on 2024-07-22 14:13

import django.db.models.deletion
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("taggit", "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx"),
    ]

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_column="created",
                        help_text="Date time on which the object was created.",
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        db_column="modified",
                        help_text="Date time on which the object was last modified.",
                        verbose_name="modified",
                    ),
                ),
                ("ip_address_v4", models.GenericIPAddressField(help_text="IPV4 address for the network.")),
                (
                    "ip_address_v6",
                    models.GenericIPAddressField(blank=True, help_text="IPv6 address for the network.", null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WhiteList",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        db_column="created",
                        help_text="Date time on which the object was created.",
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        db_column="modified",
                        help_text="Date time on which the object was last modified.",
                        verbose_name="modified",
                    ),
                ),
                (
                    "deleted",
                    models.DateTimeField(
                        blank=True, help_text="Date and time on which the network address was deleted.", null=True
                    ),
                ),
                ("name", models.CharField(help_text="name of the instance.", max_length=100)),
                (
                    "is_disabled",
                    models.BooleanField(default=False, help_text="Flag to disable the whitelisted IP address."),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WhiteListAddress",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(help_text="name of the instance.", max_length=100)),
                (
                    "address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="whitelist_address",
                        to="network.address",
                    ),
                ),
                (
                    "white_list",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="whitelist_address",
                        to="network.whitelist",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="whitelist",
            name="address",
            field=models.ManyToManyField(
                related_name="white_list", through="network.WhiteListAddress", to="network.address"
            ),
        ),
        migrations.AddConstraint(
            model_name="whitelistaddress",
            constraint=models.UniqueConstraint(fields=("address", "white_list"), name="unique_address_white_list"),
        ),
    ]
